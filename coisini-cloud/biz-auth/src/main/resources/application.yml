server:
  port: ${coisini.defs.server-port}

spring:
  application:
    name: ${coisini.defs.app-name}
  profiles:
    active: dev
  datasource:
    url: ${coisini.datasource.url}
    username: ${coisini.datasource.username}
    password: ${coisini.datasource.password}
    driver-class-name: com.mysql.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
      #上半区公共部分对应的是 org.springframework.boot.autoconfigure.jdbc.DataSourceProperties 中的属性

      #下半区属性对应的是 com.alibaba.druid.pool.DruidDataSource 中的属性，Spring Boot 默认是不注入不了这些属性值的，需要自己绑定
      #druid 数据源专有配置
    druid:
      initial-size: 5
      min-idle: 5
      max-active: 20
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      max-pool-prepared-statement-per-connection-size: 20
      filters: stat,wall
      use-global-data-source-stat: true
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 配置监控服务器
      stat-view-servlet:
        login-username: admin
        login-password: 123456
        reset-enable: false
        url-pattern: /druid/*
        # 添加IP白名单
        #allow:
        # 添加IP黑名单，当白名单和黑名单重复时，黑名单优先级更高
        #deny:
      web-stat-filter:
        # 添加过滤规则
        url-pattern: /*
        # 忽略过滤格式
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
    #hikari:
      #auto-commit: true
      #connection-test-query: 'SELECT 1'
      #maximum-pool-size: 15
  redis:
    database: ${coisini.redis.database}
    host: ${coisini.redis.host}
    port: ${coisini.redis.port}
    password: ${coisini.redis.password}
    timeout: 200ms
    jedis:
      pool:
        max-active: 200
        max-idle: 20
        min-idle: 0
        max-wait: -1ms
  security:
    oauth2:
      resource:
        filter-order: 3

mybatis:
  mapper-locations: classpath:mapper/*Mapper.xml
  type-aliases-package: com.work.bizuser.entity

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always

eureka:
  client:
    serviceUrl:
      defaultZone: ${coisini.eureka.url}
    registryFetchIntervalSeconds: 5
  instance:
    lease-expiration-duration-in-seconds: 15
    lease-renewal-interval-in-seconds: 10
    preferIpAddress: true
    instance-id: ${spring.cloud.client.ip-address}:${server.port}

logging:
  path: /var/coisini/log/${coisini.defs.app-name}